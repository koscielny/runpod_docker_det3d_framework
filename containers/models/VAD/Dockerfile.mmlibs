# MM Series Libraries (mmcv, mmdet, mmseg, mmdet3d) Environment
# 专门用于编译和安装MM系列库的环境
FROM iankaramazov/ai-models:jupyterlab

# 按照官方配置安装PyTorch (确保Python 3.7兼容)
RUN pip install --no-cache-dir \
    torch==1.9.1+cu111 \
    torchvision==0.10.1+cu111 \
    torchaudio==0.9.1 \
    -f https://download.pytorch.org/whl/cu111/torch_stable.html

# 安装官方配置的numpy
RUN pip install --no-cache-dir numpy==1.19.5

# 安装OpenMMLab工具链
RUN pip install --no-cache-dir --upgrade openmim

# 安装mmcv-full（使用mim确保正确版本）
RUN mim install mmcv-full==1.4.0 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html

# 安装mmdet和mmsegmentation
RUN pip install mmdet==2.14.0 --no-cache-dir
RUN pip install mmsegmentation==0.14.1 --no-cache-dir

# 设置mmdet3d编译环境变量
ENV TORCH_CUDA_ARCH_LIST="8.6+PTX"
ENV FORCE_CUDA="1"
ENV MAX_JOBS="4"
ENV MMCV_WITH_OPS="1"

# 安装mmdet3d
RUN git clone https://github.com/open-mmlab/mmdetection3d.git -b v0.17.1 --depth 1 && \
    cd mmdetection3d && \
    pip install -v -e .

# 设置mmdet3d路径
ENV PYTHONPATH=/app/mmdetection3d:${PYTHONPATH}

# 验证MM系列库安装
RUN python -c "import mmcv; print(f'mmcv版本: {mmcv.__version__}')" && \
    python -c "import mmdet; print(f'mmdet版本: {mmdet.__version__}')" && \
    python -c "import mmseg; print(f'mmseg版本: {mmseg.__version__}')" && \
    python -c "import mmdet3d; print(f'mmdet3d版本: {mmdet3d.__version__}')"

# 设置工作目录
WORKDIR /app